set shellopts '-eu'
set ifs "\n"
set scrolloff 10
set cursorpreviewfmt "\033[7;2m"

map d delete # Delete
map <enter> shell # Open shell
map x cut # Toggle cut
map Y $printf "%s" "$fx" | wl-copy # Yank current path
map <a-h> set hidden! # Toggle hidden files
map a push :create<space> # Make files and directories
map <tab> :toggle; down # Toggle selection down
map <backtab> :toggle; up # Toggle selection up
map E extract

# define a custom 'open' command
# This command is called when current file is not a directory. You may want to
# use either file extensions and/or mime types here. Below uses an editor for
# text files and a file opener for the rest.
cmd open ${{
    case $(file --mime-type "$(readlink -f $f)" -b) in
        text/*|application/json|application/javascript|inode/x-empty|application/x-subrip) $EDITOR $fx;;
        *) for f in $fx; do setsid -f $OPENER $f >/dev/null 2>&1; done;;
    esac
}}


# define a custom 'rename' command without prompt for overwrite
# cmd rename %[ -e $1 ] && printf "file exists" || mv $f $1
# map r push :rename<space>

# define a custom 'delete' command
cmd delete ${{
    clear; tput bold
    set -f
    printf "$fx\n"
    printf "delete?[y/n]"
    read ans
    [ "$ans" = "y" ] && rm -rf $fx
}}

# Funcion for creating files and directories
cmd create ${{
  for fp in "$@"; do
    case "$fp" in
      */) mkdir -p "$fp";;
      *) touch "$fp" || mkdir -p $(echo "$fp"|rev|cut -d '/' -f2-|rev) && touch "$fp";;
    esac
  done
  }}

# extract the current file with the right command
cmd extract ${{
  clear; tput cup $(($(tput lines)/3)); tput bold
  set -f
  printf "%s\n\t" "$fx"
  printf "extract?[y/N]"
  read ans
  [ $ans = "y" ] && {
    case $fx in
      *.tar.bz2)   tar xjf $fx     ;;
      *.tar.gz)    tar xzf $fx     ;;
      *.bz2)       bunzip2 $fx     ;;
      *.rar)       unrar e $fx     ;;
      *.gz)        gunzip $fx      ;;
      *.tar)       tar xf $fx      ;;
      *.tbz2)      tar xjf $fx     ;;
      *.tgz)       tar xzf $fx     ;;
      *.zip)       unzip $fx       ;;
      *.Z)         uncompress $fx  ;;
      *.7z)        7z x $fx        ;;
      *.tar.xz)    tar xf $fx      ;;
    esac
}
}}

# compress current file or selected files with tar and gunzip
cmd tar ${{
    set -f
    mkdir $1
    cp -r $fx $1
    tar czf $1.tar.gz $1
    rm -rf $1
}}

# compress current file or selected files with zip
cmd zip ${{
    set -f
    mkdir $1
    cp -r $fx $1
    zip -r $1.zip $1
    rm -rf $1
}}

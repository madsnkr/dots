#!/bin/bash

fzf_search_text() {
	local previewer="$1"
	local rg_cmd="rg --column --line-number --no-heading --color=always --smart-case"
	local preview_cmd="$previewer -n --color=always {1} --highlight-line {2}"

	local selected
	selected=$(fzf ${fzf_common_opts[@]} --disabled --delimiter ':' \
		--preview="$preview_cmd" \
		--bind 'alt-enter:execute-silent($EDITOR --server "$(ls -tr $XDG_RUNTIME_DIR/nvim.*.0|head -n1)" --remote-tab-silent {+1})' \
		--bind "change:reload:$rg_cmd {q} || true" < /dev/null)

    # Exit if nothing selected
    [ -z "$selected" ] && return

		# Process selection for Neovim
		local -a editor_args
		local first=1

		while IFS= read -r entry; do
			local filename=$(echo "$entry" | cut -d ':' -f1)
			local line_num=$(echo "$entry" | cut -d ':' -f2)

			if [ "$first" -eq 1 ]; then
				editor_args=("$filename" "+$line_num")
				first=0
			else
				editor_args+=("+tabedit $filename" "+$line_num")
			fi
		done <<< "$selected"

		# Open selected files in Neovim
		nvim "${editor_args[@]}"
}

# Helper function for file search mode
fzf_search_files() {
    local previewer="$1"
    local preview_cmd="$previewer -n --color=always {}"

    # Run FZF for file search
    fzf ${fzf_common_opts[@]} --preview="$preview_cmd" \
			--bind "enter:become($EDITOR -p {+})" \
			--bind 'alt-enter:execute-silent($EDITOR --server "$(ls -tr $XDG_RUNTIME_DIR/nvim.*.0|head -n1)" --remote-tab-silent {+1})'
}

# Parse arguments
mode="${1:-file}"  # Default to file mode if not specified

# Set previewer command (bat or fallback to cat)
previewer=$(command -v bat &> /dev/null && echo 'bat' || echo 'cat')

# Define common FZF options
fzf_common_opts=("--tmux" "80%" "--preview-window=up:60%:wrap:+{2}-/2" '--ansi' '--multi')

# Handle different search modes
case "$mode" in
		"text")
				fzf_search_text "$previewer"
				;;
		"file")
				fzf_search_files "$previewer"
				;;
		*)
				echo "Invalid mode: '$mode'. Use 'text' or 'file'."
				return 1
				;;
esac
